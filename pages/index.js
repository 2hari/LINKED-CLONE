import Head from 'next/head'
import {  getSession, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { AnimatePresence } from "framer-motion";
import { useRecoilState } from "recoil";

import { modalState, modalTypeState } from "../atoms/modalAtom";
import Header from '../components/Header';
import Sidebar from '../components/Sidebar';
import Feed from '../components/Feed'
import Modal from "../components/Modal";


export default function Home() {

  const [modalOpen, setModalOpen] = useRecoilState(modalState);
  const [modalType, setModalType] = useRecoilState(modalTypeState);
  
  const router = useRouter();
  //check if authenticated on client side
  const { status } = useSession({
    required: true,
    onUnauthenticated() {
      router.push("/home");
    },
  });

  return (
    // h-screen is 100vh overflow is to make feed center scrollable
    <div className='bg-[#F3F2Ef] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6'>
      <Head>
        <title>Feed | Linkedin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header/>

      {/* gap for 2d space for 1d and there is div inside main to facilate special layout with responsiveness*/}
      <main className='flex justify-center gap-x-5 px-4 sm:px-12'>
        <div className='flex flex-col md:flex-row gap-5'>
          <Sidebar/>
          <Feed/>
        </div>
        <AnimatePresence>
          {modalOpen && (
            <Modal handleClose={() => setModalOpen(false)} type={modalType} />
          )}
        </AnimatePresence>
      </main>
    </div>
  )
}

export async function getServerSideProps(context) {
  // Check if the user is authenticated on the server...
  const session = await getSession(context);
  if (!session) {
    return {
      redirect: {
        permanent: false,
        destination: "/home",
      },
    };
  }

  return {
    props: {
      session
    },
  };
}
